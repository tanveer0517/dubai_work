# -*- coding: utf-8 -*-
##############################################################################
#
#    Bista Solutions Pvt. Ltd
#    Copyright (C) 2018 (http://www.bistasolutions.com)
#
##############################################################################
from odoo import models, fields, api, exceptions
from gomartapi import *
import logging

_logger = logging.getLogger(__name__)


class AccountTax(models.Model):
    _inherit = "account.tax"

    go_mart_tax_id = fields.Integer("GoMart Tax ID", readonly=True, help="This field will be generated by GoMart API")
    start_date = fields.Date("Start date", help="Tax start date")
    end_date = fields.Date("End date", help="Tax end date")
    is_active = fields.Boolean(string="Active", default="True", help='Active or Inactive status')

    @api.model
    def create(self, values):
        _active = {True:1, False:2}
        rec = super(AccountTax, self).create(values)
        gomart_server = self.env['gomart.server.api'].search([], limit=1)
        try:
            if gomart_server and gomart_server.name: 
                # setTax API
                tax_API = setTax(
                                gomart_server.name,
                                rec.id,  # erp_tax_id
                                rec.name,  # erp_tax_title
                                rec.amount,  # erp_tax_value
                                rec.start_date,  # erp_start_date
                                rec.end_date,  # erp_end_date 
                                _active.get(rec.is_active)  # active 
                                )
                 # Log
                _logger.warning("\n\n\n" + " Tax : " + 
                                "\n Data : " + str(tax_API.get('data')) + 
                                "\n Status : " + str(tax_API.get('status_code')) + 
                                "\n json_dump :" + str(tax_API.get('json_dump'))
                                )
                if tax_API.get('json_dump').get('code') == 200:
                    rec.go_mart_tax_id = tax_API.get("tax_id")
                else:
                    _logger.warning('GoMart APi setTax invalid %s' % str(tax_API.get('json_dump').get('code')) + 
                        ' ' + 'GoMart error message : %s' % 
                        str(tax_API.get('json_dump').get('error')))
            else:
                _logger.warning("Please configure correct GoMart APi server.")
        except:
            _logger.warning("GoMart APi setTax not working or server Down.")
        return rec

    @api.multi
    def write(self, vals):
        gomart_server = self.env['gomart.server.api'].search([], limit=1)
        _active = {True:1, False:2}
        is_active = ''
        if _active.get(vals.get('is_active')):
            is_active = _active.get(vals.get('is_active'))
        else:
            is_active = _active.get(self.is_active)
        try:
            if gomart_server and gomart_server.name: 
                # setTax API
                tax_API = setTax(
                                gomart_server.name,
                                self.id,  # erp_tax_id
                                vals.get('name') or self.name,  # erp_tax_title
                                vals.get('amount') or self.amount,  # erp_tax_value
                                vals.get('start_date') or self.start_date,  # erp_start_date
                                vals.get('end_date') or self.end_date,  # erp_end_date 
                                is_active
                                )
                # Log
                _logger.warning("\n\n\n" + " Tax : " + 
                                "\n Data : " + str(tax_API.get('data')) + 
                                "\n Status : " + str(tax_API.get('status_code')) + 
                                "\n json_dump :" + str(tax_API.get('json_dump'))
                                )
                if tax_API.get('json_dump').get('code') == 200:
                    vals.update({'go_mart_tax_id':tax_API.get('tax_id')})
                else:
                    _logger.warning('GoMart APi setTax Invalid %s' % str(tax_API.get('json_dump').get('code')) + 
                                    ' ' + 'GoMart error message : %s' % 
                                    str(tax_API.get('json_dump').get('error')))
            else:
                _logger.warning("Please configure correct GoMart APi server.")
        except:
            _logger.warning("GoMart APi setTax not working or server Down.")
        return super(AccountTax, self).write(vals)

