# -*- coding: utf-8 -*-
##############################################################################
#
#    Bista Solutions Pvt. Ltd
#    Copyright (C) 2018 (http://www.bistasolutions.com)
#
##############################################################################
from odoo import models, fields, api, exceptions
from gomartapi import *
import logging

_logger = logging.getLogger(__name__)

 
class ProductCategory(models.Model):
    _inherit = 'product.category'

    categ_img = fields.Binary("Image")
    categ_img_filename = fields.Char("GoMart Category Image name", readonly="False", compute="_compute_categ_image_name")
    go_mart_sub_category_id = fields.Integer("GoMart Subcategory ID", readonly=True, help="This field will be generated by GoMart API.")
    go_mart_category_id = fields.Integer("GoMart Category ID", readonly=True, help="This field will be generated by GoMart.")
    group_id = fields.Many2one("product.group", string="Group")
    gomart_alllow_product = fields.Boolean(string="GoMart Allow Product", default="False")
    is_active = fields.Boolean(string="Active", default="True", help='Active or Inactive status')

    @api.one
    def _compute_categ_image_name(self):
        if not self.categ_img_filename:
            self.categ_img_filename = self.name + ".jpg"

    @api.model
    def create(self, vals):
        _active = {True:1, False:2}
        _allow_product = {True:1, False:0}
        rec = super(ProductCategory, self).create(vals)
        try:
            gomart_server = self.env['gomart.server.api'].search([], limit=1)
            if gomart_server and gomart_server.name: 
                if not rec.is_subscription:
                    if rec.parent_id:
                        # API for Subcategory 
                        subcat_API = setSubCategory(
                                                    gomart_server.name,
                                                    rec.id,  # erp_subcategory_id
                                                    rec.parent_id.id,  # erp_category_id
                                                    rec.name,  # erp_subcategory_name
                                                    rec.group_id.id,  # erp_group_id
                                                    rec.categ_img_filename,  # erp_image_name
                                                    _active.get(rec.is_active)  # active
                                                    )
                        # Log
                        _logger.warning("\n\n\n" + " SubCategory : " + 
                                        "\n Data : " + str(subcat_API.get('data')) + 
                                        "\n Status : " + str(subcat_API.get('status_code')) + 
                                        "\n json_dump :" + str(subcat_API.get('json_dump'))
                                        )
                        if subcat_API.get('json_dump').get('code') == 200 :
                            rec.go_mart_sub_category_id = subcat_API.get('subcategory_id')
                        else:
                            _logger.warning("GoMart APi setSubcategory,Invalid code %s" % 
                                            str(subcat_API.get("json_dump").get('code')) + 
                                            "  " + "GoMart error Message  %s" % 
                                             str(subcat_API.get("json_dump").get('error')) or 'None.'
                                            )
                    else:
                        # API for Category 
                        categ_API = setCategory(
                                                gomart_server.name,
                                                rec.id,  # erp_category_id
                                                rec.name,  # erp_category_name
                                                rec.group_id.id,  # erp_group_id
                                                rec.categ_img_filename,  # erp_app_img
                                                rec.categ_img_filename,  # erp_image_name
                                                _allow_product.get(rec.gomart_alllow_product),  # erp_product_allowed
                                                _active.get(rec.is_active)  # active
                                               )
                        # Log
                        _logger.warning("\n\n\n" + " Category : " + 
                                        "\n Data : " + str(categ_API.get('data')) + 
                                        "\n Status : " + str(categ_API.get('status_code')) + 
                                        "\n json_dump :" + str(categ_API.get('json_dump'))
                                        )
                        if categ_API.get('json_dump').get('code') == 200: 
                                rec.go_mart_category_id = categ_API.get('category_id')
                        else:
                            _logger.warning("GoMart APi setCategory,Invalid status code %s" % 
                                     str(categ_API.get('json_dump').get('code')) + 
                                     ' Error message %s' % str(categ_API.get('json_dump').get('error')) or 'None.'
                                    )
            else:
                _logger.warning("Please configure correct GoMart APi server.")
        except:
            _logger.warning("GoMart APi setCategory or setSubCategory not working or server Down.")
        return rec

    @api.multi
    def write(self, vals):
        _active = {True:1, False:2}
        _allow_product = {True:1, False:0}
        _is_subscription = {True:1, False:2}
        is_active = ''
        allow_product = ''
        is_subscription = ''

        if _active.get(vals.get('is_active')):
            is_active = _active.get(vals.get('is_active'))
        else:
            is_active = _active.get(self.is_active)

        if _allow_product.get(vals.get('gomart_alllow_product')):
            allow_product = _allow_product.get(vals.get('gomart_alllow_product'))
        else:
            allow_product = _allow_product.get(self.gomart_alllow_product)

        if _is_subscription.get(vals.get('is_subscription')):
            is_subscription = _is_subscription.get(vals.get('is_subscription'))
        else:
            is_subscription = _is_subscription.get(self.is_subscription)

        try:
            gomart_server = self.env['gomart.server.api'].search([], limit=1)
            if gomart_server and gomart_server.name:
                for categ in self:
                    if is_subscription == 2 :
                        if (vals.get('parent_id') or categ.parent_id.id):
                            # API for Subcategory 
                            subcat_API = setSubCategory(
                                                  gomart_server.name,
                                                  categ.id,  # erp_subcategory_id
                                                  vals.get('parent_id') or categ.parent_id.id,  # erp_category_id
                                                  vals.get('name') or categ.name,  # erp_subcategory_name
                                                  vals.get('group_id') or categ.group_id.id,  # erp_group_id
                                                  vals.get('categ_img_filename') or  categ.categ_img_filename,  # erp_image_name
                                                  is_active)
                            # Log
                            _logger.warning("\n\n\n" + " SubCategory : " + 
                                            "\n Data : " + str(subcat_API.get('data')) + 
                                            "\n Status : " + str(subcat_API.get('status_code')) + 
                                            "\n json_dump :" + str(subcat_API.get('json_dump'))
                                            )
                            if  subcat_API.get("json_dump").get('code') == 200:
                                vals.update({'go_mart_sub_category_id':subcat_API.get('subcategory_id')})
                            else:
                                _logger.warning("GoMart APi setSubcategory,Invalid code %s" % 
                                                str(subcat_API.get("json_dump").get('code')) + 
                                                "  " + "GoMart error Message  %s" % 
                                                 str(subcat_API.get("json_dump").get('error')) or 'None.')
                        else: 
                            # API for Category 
                            categ_API = setCategory(
                                                    gomart_server.name,
                                                    categ.id,  # erp_category_id
                                                    vals.get('name') or categ.name,  # erp_category_name
                                                    vals.get('group_id') or categ.group_id.id,  # erp_group_id
                                                    vals.get('categ_img_filename') or categ.categ_img_filename,  # erp_app_img
                                                    vals.get('categ_img_filename') or categ.categ_img_filename,  # erp_image_name
                                                    allow_product,
                                                    is_active)
                            # Log
                            _logger.warning("\n\n\n" + " Category : " + 
                                            "\n Data : " + str(categ_API.get('data')) + 
                                            "\n Status : " + str(categ_API.get('status_code')) + 
                                            "\n json_dump :" + str(categ_API.get('json_dump'))
                                            )
                            if categ_API.get('json_dump').get('code') == 200:
                                   vals.update({'go_mart_category_id':categ_API.get('category_id')})
                            else:
                                _logger.warning("GoMart APi setCategory,Invalid status code %s" % 
                                                 str(categ_API.get('json_dump').get('code')) + 
                                                 ' Error message %s' % str(categ_API.get('json_dump').get('error')) or 'None.')
            else:
                _logger.warning("Please configure correct GoMart APi server.")
        except:
            _logger.warning("GoMart APi setCategory or setSubCategory not working or server Down.")
        return super(ProductCategory, self).write(vals)
